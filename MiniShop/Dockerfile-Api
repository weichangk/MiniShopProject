#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM registry.cn-hangzhou.aliyuncs.com/newbe36524/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM registry.cn-hangzhou.aliyuncs.com/newbe36524/sdk:3.1-buster AS build
WORKDIR /src
COPY ["MiniShop.Api/MiniShop.Api.csproj", "MiniShop.Api/"]
COPY ["CommonTools.Core/CommonTools.Core.csproj", "CommonTools.Core/"]
COPY ["Logging.Serilog/Logging.Serilog.csproj", "Logging.Serilog/"]
# COPY ["Cache.MemoryCache/Cache.MemoryCache.csproj", "Cache.MemoryCache/"]
COPY ["MiniShop.Services/MiniShop.Services.csproj", "MiniShop.Services/"]
# COPY ["MiniShop.IServices/MiniShop.IServices.csproj", "MiniShop.IServices/"]
# COPY ["MiniShop.Dto/MiniShop.Dto.csproj", "MiniShop.Dto/"]
# COPY ["MiniShop.Model/MiniShop.Model.csproj", "MiniShop.Model/"]
# COPY ["Orm.Core/Orm.Core.csproj", "Orm.Core/"]
RUN dotnet restore "MiniShop.Api/MiniShop.Api.csproj"
COPY . .
WORKDIR "/src/MiniShop.Api"
RUN dotnet build "MiniShop.Api.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "MiniShop.Api.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENV INITDB=initdb
ENTRYPOINT ["dotnet", "MiniShop.Api.dll"]